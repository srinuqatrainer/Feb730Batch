package com.GRID;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.By;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.Platform;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.testng.annotations.Parameters;
import org.testng.annotations.Test;

public class NewTours_LogInTest
{

	@Parameters("Browser")
	
	@Test
	public void orangeHRM_LogInTest(String browser) throws IOException
	{
		
		// NODE's info
	//	DesiredCapabilities - Is used to specify which Browser and Platform should be considered
		
		DesiredCapabilities cap = null;
		
		if(browser.equalsIgnoreCase("Firefox"))
		{
			cap = DesiredCapabilities.firefox();
			cap.setBrowserName("firefox");
			cap.setPlatform(Platform.WINDOWS);
					
		}
		else
			if(browser.equalsIgnoreCase("chrome"))
			{
				cap = DesiredCapabilities.chrome();
				cap.setBrowserName("chrome");
				cap.setPlatform(Platform.WINDOWS);
			}
		
		
		// RemoteWebDriver - It is used to connect to HUB Server and communicate to the Node's
		
		RemoteWebDriver driver = new RemoteWebDriver(new URL("http://192.168.0.4:4444/wd/hub"),cap);
		
		driver.get("http://127.0.0.1/orangehrm-4.0/symfony/web/index.php/auth/login");
		
		FileInputStream file=new FileInputStream("./src/com/ApplicationTestDataFiles/"
                + "OHRM_LogIn_MultipleTestData.xlsx");
XSSFWorkbook workbook=new XSSFWorkbook(file);
XSSFSheet sheet=workbook.getSheet("Sheet1");

int rowsCount=sheet.getLastRowNum();
Row r = null;

for(int i=1;i<=rowsCount;i++)
{

r=sheet.getRow(i);
driver.findElement(By.id("txtUsername")).sendKeys(r.getCell(0).getStringCellValue());
driver.findElement(By.id("txtPassword")).sendKeys(r.getCell(1).getStringCellValue());
driver.findElement(By.id("btnLogin")).click();

try
{
String expected_LoginText = "Welcome";
System.out.println(expected_LoginText);

WebElement actual_LogInTextElement =driver.findElement(By.linkText("Welcome Admin"));
String actual_LogInText=actual_LogInTextElement.getText();

System.out.println(actual_LogInText);

if(actual_LogInText.contains(expected_LoginText))
{
System.out.println("OrangeHRM Login Successful -PASS");
r.createCell(2).setCellValue("OrangeHRM Login Successful -PASS");

actual_LogInTextElement.click();

Thread.sleep(5000);

driver.findElement(By.linkText("Logout")).click();

}
}
catch(Exception e)
{
String expected_LogInError_AlertText="Invalid credentials";
System.out.println(" The exception Error text message is : "+expected_LogInError_AlertText);

String actual_LogInError_Text =driver.findElement(By.id("spanMessage")).getText(); 
System.out.println("The actual Error text is :" +actual_LogInError_Text);

if(actual_LogInError_Text.equals(expected_LogInError_AlertText))
{
System.out.println("OHRM LogIn Failed - FAIL");
r.createCell(2).setCellValue("OHRM LogIn Failed - FAIL");

File screenshots=((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
FileUtils.copyFile(screenshots, new File("./Screenshots/"+i+"_Iteration_errorLogIn"+".png"));
}
}


FileOutputStream file1=new FileOutputStream("./src/com/ApplicationTestResultFiles"
+ "/OHRM_LogIn_TestResult.xlsx");
workbook.write(file1);
}


		
		
		
	}
	
	
	
	
	

}
